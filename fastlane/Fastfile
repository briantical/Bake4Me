# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

fastlane_version '2.28.3'

before_all do
  ensure_git_branch
  ensure_git_status_clean
  git_pull
end

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test" , project_dir: 'android/')
  end

  desc 'Build the Android application.'
  private_lane :build do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'assemble', build_type: 'Release', project_dir: 'android/')
  end

  desc 'Ship to Playstore Beta.'
  lane :beta do
    build
    supply(track: 'beta', track_promote_to: 'beta')
    git_commit(path: ['./android/gradle.properties'], message: 'Bump versionCode')
    push_to_git_remotecrashlytics
    upload_to_play_store(track: 'beta')
  end

  #desc "Submit a new Beta Build to Crashlytics Beta"
  #lane :beta do
    # Adjust the `build_type` and `flavor` params as needed to build the right APK for your setup
    #gradle(task: "assembleRelease" , project_dir: 'android/')
    #crashlytics
    #upload_to_play_store(track: 'beta')
    
    # sh "your_script.sh"
    #You can also use other beta testing services here
  #end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    increment_build_number
    gradle(task: "assembleRelease" , project_dir: 'android/')
    upload_to_play_store # Uploads the APK built in the gradle step above and releases it to all production users
  end

  desc "Build debug and test APK for screenshots"
  lane :build_for_screengrab do
    gradle(
      task: 'clean',
      project_dir: 'android/'
    )
    build_android_app(
      task: 'assemble',
      build_type: 'Debug',
      project_dir: 'android/'
    )
    build_android_app(
      task: 'assemble',
      build_type: 'AndroidTest',
      project_dir: 'android/'
    )
  end

  lane :screenshots do
    capture_android_screenshots
    upload_to_play_store
  end
end


platform :ios do
   # iOS Lanes
end
